# watch without "watch" command
#
# usage: w [period] command
# examples:
#	run 'ls' every 3 second:
#		w ls
#	run 'ls' every 5 second:
#		w 5 ls
#	run 'lsof | grep file' every 5 second:
#		w 5 'lsof | grep file'

w(){
	# make cursor visible and hide '^C' and '%'
	trap "{ echo ''; tput cnorm; tput dl1; tput cuu1; return }" INT

	# default period is three seconds
	period=3
	if [[ "${1}" =~ ^[0-9]+$ ]]; then
		period="${1}"
		shift
	fi

	if [[ "$#" -eq 0 ]]; then
		echo "You have to specify a command to repeat."
		return
	fi

	tput clear

	command="$*"

	rm -f /tmp/w-old
	rm -f /tmp/w-new
	touch /tmp/w-old
	touch /tmp/w-new

	# make cursor invisible
	tput civis
	while true
	do
		# move cursor to top left corner of terminal
		tput home

		# color command if bat is installed
		if command -v bat &> /dev/null; then
			echo "\e[36m::\e[39m Every \e[92m${period}\e[39ms \e[36m::\e[39m $(echo "${command}" | bat --language zsh --color always --theme="Dracula" --plain) \e[36m::\e[39m"
		else
			echo "\e[36m::\e[39m Every \e[92m${period}\e[39ms \e[36m::\e[39m ${command} \e[36m::\e[39m"
		fi

		eval "${command}" | while IFS= read -r new_line; do
			tput el # clear to end of line
			echo "${new_line}" >> /tmp/w-new

			old_line="$(head -1 /tmp/w-old)"
			sed -i '1d' /tmp/w-old

			# color line if it's changed
			if diff <(echo "${old_line}") <(echo "${new_line}") > /dev/null; then
				echo "${new_line}"
			else
				echo "\e[92m${new_line}\e[39m"
			fi
		done

		tput ed # clear to end of screen

		sleep "${period}"

		mv /tmp/w-new /tmp/w-old
		touch /tmp/w-new
	done
}

w "$@"
